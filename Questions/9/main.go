package main

import (
	"fmt"
	"sync"
)

func main() {
	//создаем группу чтобы дождаться выполнения конвейера
	wg := sync.WaitGroup{}
	wg.Add(1)
	//первый канал, куда пишутся числа из массива
	first := make(chan int)
	//второй канал куда пишутся числа из первого канала * 2
	second := make(chan int)
	//горутина первого канала
	go func() {
		for v := range first {
			second <- v * 2
		}
		//когда первый канал закрылся закрываем второй
		close(second)
	}()
	//горутина второго канала
	go func() {
		for v := range second {
			fmt.Printf("%d\n", v)
		}
		//когда второй канала закрылся - уведомляем группу
		wg.Done()
	}()
	//записываем в первый канал из массива
	for _, v := range [7]int{1, 2, 3, 4, 5, 6, 7} {
		first <- v
	}
	//после окончания записи закрываем первый канал
	close(first)
	//ждем когда конвейер закончит чтобы получить полный вывод на экран
	wg.Wait()
}
